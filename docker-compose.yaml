version: "3"

services:
  back:
    image: back:0.1.0
    expose:
      - "8000"
    build:
      context: ./back
      dockerfile: Dockerfile
    networks:
      main:

  front:
    image: front:0.1.0
    expose:
      - "3000"
    build:
      context: ./front
      dockerfile: Dockerfile
    networks:
      main:

  weather-app:
    image: weather_app:0.1.0
    expose:
      - "5173"
    ports:
      - "5173:5173"
    build:
      context: ./third-party/weather-app
      dockerfile: Dockerfile
    volumes:
      - ./data/build/weather-app:/build
    command: "/bin/sh -c 'cp -r /app/dist/* /build'"
    networks:
      main:

  nginx:
    image: nginx:1.24.0
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      # letsencrypt
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      # weather-app
      - ./data/build:/build
    depends_on:
      - back
      - front
      - weather-app
    # letsencrypt
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      main:
  
  # letsencrypt https://velog.io/@zero-black/Docker-compose-certbot-nginx-%EB%A1%9C-SSL-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EB%B0%9C%EA%B8%89%ED%95%98%EA%B8%B0 참고
  certbot:
    container_name: certbot
    image: certbot/certbot:arm32v6-latest
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  main:
